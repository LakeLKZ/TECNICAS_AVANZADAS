version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: facu-postgres-1
    restart: unless-stopped
    environment:
      POSTGRES_DB: bannersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bannersdb"]
      interval: 5s
      timeout: 2s
      retries: 5

  backend:
    image: rbxlake/facu-backend:1.0
    container_name: banners_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bannersdb;Username=postgres;Password=postgrespw"
      ASPNETCORE_URLS: "http://+:8080"
    ports:
      - "8080:8080"

  frontend:
    image: rbxlake/facu-frontend:1.0
    container_name: banners_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  postgres_data:
